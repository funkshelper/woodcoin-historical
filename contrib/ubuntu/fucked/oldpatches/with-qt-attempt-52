Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 woodcoin (1.2-1) unstable; urgency=low
 .
   * Initial release (Closes: #nnnn)  <nnnn is the bug number of your ITP>
Author: P. H. Madore <moonpunter@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- /dev/null
+++ woodcoin-1.2/build/overviewpage.moc
@@ -0,0 +1,88 @@
+/****************************************************************************
+** Meta object code from reading C++ file 'overviewpage.cpp'
+**
+** Created by: The Qt Meta Object Compiler version 67 (Qt 5.4.2)
+**
+** WARNING! All changes made in this file will be lost!
+*****************************************************************************/
+
+#include <QtCore/qbytearray.h>
+#include <QtCore/qmetatype.h>
+#if !defined(Q_MOC_OUTPUT_REVISION)
+#error "The header file 'overviewpage.cpp' doesn't include <QObject>."
+#elif Q_MOC_OUTPUT_REVISION != 67
+#error "This file was generated using the moc from 5.4.2. It"
+#error "cannot be used with the include files from this version of Qt."
+#error "(The moc has changed too much.)"
+#endif
+
+QT_BEGIN_MOC_NAMESPACE
+struct qt_meta_stringdata_TxViewDelegate_t {
+    QByteArrayData data[1];
+    char stringdata[15];
+};
+#define QT_MOC_LITERAL(idx, ofs, len) \
+    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
+    qptrdiff(offsetof(qt_meta_stringdata_TxViewDelegate_t, stringdata) + ofs \
+        - idx * sizeof(QByteArrayData)) \
+    )
+static const qt_meta_stringdata_TxViewDelegate_t qt_meta_stringdata_TxViewDelegate = {
+    {
+QT_MOC_LITERAL(0, 0, 14) // "TxViewDelegate"
+
+    },
+    "TxViewDelegate"
+};
+#undef QT_MOC_LITERAL
+
+static const uint qt_meta_data_TxViewDelegate[] = {
+
+ // content:
+       7,       // revision
+       0,       // classname
+       0,    0, // classinfo
+       0,    0, // methods
+       0,    0, // properties
+       0,    0, // enums/sets
+       0,    0, // constructors
+       0,       // flags
+       0,       // signalCount
+
+       0        // eod
+};
+
+void TxViewDelegate::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
+{
+    Q_UNUSED(_o);
+    Q_UNUSED(_id);
+    Q_UNUSED(_c);
+    Q_UNUSED(_a);
+}
+
+const QMetaObject TxViewDelegate::staticMetaObject = {
+    { &QAbstractItemDelegate::staticMetaObject, qt_meta_stringdata_TxViewDelegate.data,
+      qt_meta_data_TxViewDelegate,  qt_static_metacall, Q_NULLPTR, Q_NULLPTR}
+};
+
+
+const QMetaObject *TxViewDelegate::metaObject() const
+{
+    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
+}
+
+void *TxViewDelegate::qt_metacast(const char *_clname)
+{
+    if (!_clname) return Q_NULLPTR;
+    if (!strcmp(_clname, qt_meta_stringdata_TxViewDelegate.stringdata))
+        return static_cast<void*>(const_cast< TxViewDelegate*>(this));
+    return QAbstractItemDelegate::qt_metacast(_clname);
+}
+
+int TxViewDelegate::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
+{
+    _id = QAbstractItemDelegate::qt_metacall(_c, _id, _a);
+    if (_id < 0)
+        return _id;
+    return _id;
+}
+QT_END_MOC_NAMESPACE
--- /dev/null
+++ woodcoin-1.2/build/rpcconsole.moc
@@ -0,0 +1,135 @@
+/****************************************************************************
+** Meta object code from reading C++ file 'rpcconsole.cpp'
+**
+** Created by: The Qt Meta Object Compiler version 67 (Qt 5.4.2)
+**
+** WARNING! All changes made in this file will be lost!
+*****************************************************************************/
+
+#include <QtCore/qbytearray.h>
+#include <QtCore/qmetatype.h>
+#if !defined(Q_MOC_OUTPUT_REVISION)
+#error "The header file 'rpcconsole.cpp' doesn't include <QObject>."
+#elif Q_MOC_OUTPUT_REVISION != 67
+#error "This file was generated using the moc from 5.4.2. It"
+#error "cannot be used with the include files from this version of Qt."
+#error "(The moc has changed too much.)"
+#endif
+
+QT_BEGIN_MOC_NAMESPACE
+struct qt_meta_stringdata_RPCExecutor_t {
+    QByteArrayData data[6];
+    char stringdata[44];
+};
+#define QT_MOC_LITERAL(idx, ofs, len) \
+    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
+    qptrdiff(offsetof(qt_meta_stringdata_RPCExecutor_t, stringdata) + ofs \
+        - idx * sizeof(QByteArrayData)) \
+    )
+static const qt_meta_stringdata_RPCExecutor_t qt_meta_stringdata_RPCExecutor = {
+    {
+QT_MOC_LITERAL(0, 0, 11), // "RPCExecutor"
+QT_MOC_LITERAL(1, 12, 5), // "reply"
+QT_MOC_LITERAL(2, 18, 0), // ""
+QT_MOC_LITERAL(3, 19, 8), // "category"
+QT_MOC_LITERAL(4, 28, 7), // "command"
+QT_MOC_LITERAL(5, 36, 7) // "request"
+
+    },
+    "RPCExecutor\0reply\0\0category\0command\0"
+    "request"
+};
+#undef QT_MOC_LITERAL
+
+static const uint qt_meta_data_RPCExecutor[] = {
+
+ // content:
+       7,       // revision
+       0,       // classname
+       0,    0, // classinfo
+       2,   14, // methods
+       0,    0, // properties
+       0,    0, // enums/sets
+       0,    0, // constructors
+       0,       // flags
+       1,       // signalCount
+
+ // signals: name, argc, parameters, tag, flags
+       1,    2,   24,    2, 0x06 /* Public */,
+
+ // slots: name, argc, parameters, tag, flags
+       5,    1,   29,    2, 0x0a /* Public */,
+
+ // signals: parameters
+    QMetaType::Void, QMetaType::Int, QMetaType::QString,    3,    4,
+
+ // slots: parameters
+    QMetaType::Void, QMetaType::QString,    4,
+
+       0        // eod
+};
+
+void RPCExecutor::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
+{
+    if (_c == QMetaObject::InvokeMetaMethod) {
+        RPCExecutor *_t = static_cast<RPCExecutor *>(_o);
+        switch (_id) {
+        case 0: _t->reply((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2]))); break;
+        case 1: _t->request((*reinterpret_cast< const QString(*)>(_a[1]))); break;
+        default: ;
+        }
+    } else if (_c == QMetaObject::IndexOfMethod) {
+        int *result = reinterpret_cast<int *>(_a[0]);
+        void **func = reinterpret_cast<void **>(_a[1]);
+        {
+            typedef void (RPCExecutor::*_t)(int , const QString & );
+            if (*reinterpret_cast<_t *>(func) == static_cast<_t>(&RPCExecutor::reply)) {
+                *result = 0;
+            }
+        }
+    }
+}
+
+const QMetaObject RPCExecutor::staticMetaObject = {
+    { &QObject::staticMetaObject, qt_meta_stringdata_RPCExecutor.data,
+      qt_meta_data_RPCExecutor,  qt_static_metacall, Q_NULLPTR, Q_NULLPTR}
+};
+
+
+const QMetaObject *RPCExecutor::metaObject() const
+{
+    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
+}
+
+void *RPCExecutor::qt_metacast(const char *_clname)
+{
+    if (!_clname) return Q_NULLPTR;
+    if (!strcmp(_clname, qt_meta_stringdata_RPCExecutor.stringdata))
+        return static_cast<void*>(const_cast< RPCExecutor*>(this));
+    return QObject::qt_metacast(_clname);
+}
+
+int RPCExecutor::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
+{
+    _id = QObject::qt_metacall(_c, _id, _a);
+    if (_id < 0)
+        return _id;
+    if (_c == QMetaObject::InvokeMetaMethod) {
+        if (_id < 2)
+            qt_static_metacall(this, _c, _id, _a);
+        _id -= 2;
+    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
+        if (_id < 2)
+            *reinterpret_cast<int*>(_a[0]) = -1;
+        _id -= 2;
+    }
+    return _id;
+}
+
+// SIGNAL 0
+void RPCExecutor::reply(int _t1, const QString & _t2)
+{
+    void *_a[] = { Q_NULLPTR, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
+    QMetaObject::activate(this, &staticMetaObject, 0, _a);
+}
+QT_END_MOC_NAMESPACE
--- woodcoin-1.2.orig/qt/rpcconsole.cpp
+++ woodcoin-1.2/qt/rpcconsole.cpp
@@ -6,7 +6,7 @@
 #include "ui_rpcconsole.h"
 
 #include "clientmodel.h"
-#include "bitcoinrpc.h"
+#include "../bitcoinrpc.h"
 #include "guiutil.h"
 
 #include <QTime>
--- woodcoin-1.2.orig/woodcoinqt.mk
+++ woodcoin-1.2/woodcoinqt.mk
@@ -1941,7 +1941,37 @@ build/guiutil.o: qt/guiutil.cpp qt/guiut
 	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/guiutil.o qt/guiutil.cpp
 
 build/transactionrecord.o: qt/transactionrecord.cpp qt/transactionrecord.h \
-		uint256.h
+		uint256.h \
+		wallet.h \
+		main.h \
+		bignum.h \
+		util.h \
+		netbase.h \
+		serialize.h \
+		allocators.h \
+		version.h \
+		clientversion.h \
+		compat.h \
+		sync.h \
+		threadsafety.h \
+		net.h \
+		mruset.h \
+		limitedmap.h \
+		protocol.h \
+		addrman.h \
+		hash.h \
+		bloom.h \
+		script.h \
+		keystore.h \
+		crypter.h \
+		key.h \
+		hashblock.h \
+		sph_skein.h \
+		sph_types.h \
+		ui_interface.h \
+		walletdb.h \
+		db.h \
+		base58.h
 	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/transactionrecord.o qt/transactionrecord.cpp
 
 build/optionsmodel.o: qt/optionsmodel.cpp qt/optionsmodel.h \
